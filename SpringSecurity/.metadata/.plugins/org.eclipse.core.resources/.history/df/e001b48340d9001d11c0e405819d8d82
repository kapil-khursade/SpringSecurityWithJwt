package com.example.demo.Service;

import java.security.Key;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import org.springframework.stereotype.Component;
import org.springframework.stereotype.Service;

import io.jsonwebtoken.Jwts;
import io.jsonwebtoken.SignatureAlgorithm;
import io.jsonwebtoken.io.Decoders;
import io.jsonwebtoken.security.Keys;

@Service
public class JWTService {
	
	public static String SECRETE = "546A576E5A7234753778214125442A472D4B6150645267556B58703273357638";

	
	public String generateToken(String username) {
		
		Map<String, Object> claims = new HashMap<>();
		
		return createToken(claims, username);
	}

	private String createToken(Map<String, Object> claims, String username) {
		// TODO Auto-generated method stub
		return  Jwts.builder()
				.setClaims(claims)
				.setSubject(username)
				.setIssuedAt(new Date(System.currentTimeMillis()))
				.setExpiration(new Date(System.currentTimeMillis() + 1000*60))
				.signWith(getSignkey(), SignatureAlgorithm.HS256).compact();
	}

	private Key getSignkey() {
		// TODO Auto-generated method stub
		byte[] keyBytes = Decoders.BASE64.decode(SECRETE);
		return Keys.hmacShaKeyFor(keyBytes);
	}
}
